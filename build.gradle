buildscript {
  repositories {
      jcenter()
  }
  dependencies {
      classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.3.RELEASE")
  }
}

apply plugin: 'java'
apply plugin: 'distribution'
apply plugin: 'jacoco'
apply plugin: 'findbugs'
apply plugin: 'pmd'
apply plugin: 'spring-boot'
apply from: 'eclipse.gradle'

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
  jcenter()
}

sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integration-test/java')
        }
//        resources.srcDir file('src/integration-test/resources')
    }
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

dependencies {
  compile 'org.springframework.boot:spring-boot-starter:1.3.0.RELEASE'

  testCompile 'junit:junit:4.11'//, 'org.springframework.boot:spring-boot-starter-test:1.3.0.RELEASE'
}

task dump(type: Copy){
  description "Copies this project's dependencies to ${project.buildDir}/dumpedDependencies directory."
  from configurations.runtime
  into "${project.buildDir}/dumpedDependencies"
}

task integrationTest(type: Test) {
  description "Runs the integration tests."
  testClassesDir = sourceSets.integrationTest.output.classesDir
  classpath = sourceSets.integrationTest.runtimeClasspath
}

check.dependsOn integrationTest
integrationTest.mustRunAfter test
jacocoTestReport.dependsOn test
build.dependsOn jacocoTestReport

test { //show test output
    testLogging.showStandardStreams = true
}

tasks.withType(Test) {
//write unit and integration test reports to different directories
  reports.html.destination = file("${reporting.baseDir}/${name}")
}

findbugsMain{
  reports{
    xml.enabled = false
    html.enabled = true //we only care about the html since task will fail in jenkins if gradle reports a problem
  }
}

findbugsTest.enabled = false //not enabled because sometimes you need to do bad practices in tests

pmd {
  ruleSets = ["java-basic", "java-braces"]
}